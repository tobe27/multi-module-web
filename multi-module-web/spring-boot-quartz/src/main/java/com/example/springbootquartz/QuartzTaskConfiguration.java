package com.example.springbootquartz;

import org.quartz.*;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * @author CREATED BY L.C.Y on 2019-2-15
 */
@Configuration
public class QuartzTaskConfiguration {

    @Bean
    public JobDetail quartzTaskDetail() {
        return JobBuilder.newJob(QuartzTask.class).withIdentity("quartzTask").storeDurably().build();
    }

    // Cron表达式说明
    //
    // 位置	时间域	允许值	特殊值
    // 1	秒	    0-59	, - * /
    // 2	分钟	0-59	, - * /
    // 3	小时	0-23	, - * /
    // 4	日期	1-31	, - * ? / L W C
    // 5	月份	1-12	, - * /
    // 6	星期	1-7	,  - * ? / L C #
    // 7 年份（可选）1-31	, - * /
    //
    // 星号(*)：可用在所有字段中，表示对应时间域的每一个时刻，例如， 在分钟字段时，表示“每分钟”；
    //
    // 问号（?）：该字符只在日期和星期字段中使用，它通常指定为“无意义的值”，相当于点位符；
    //
    // 减号(-)：表达一个范围，如在小时字段中使用“10-12”，则表示从10到12点，即10,11,12；
    //
    // 逗号(,)：表达一个列表值，如在星期字段中使用“MON,WED,FRI”，则表示星期一，星期三和星期五；
    //
    // 斜杠(/)：x/y表达一个等步长序列，x为起始值，y为增量步长值。如在分钟字段中使用0/15，则表示为0,15,30和45秒，而5/15在分钟字段中表示5,20,35,50，你也可以使用*/y，它等同于0/y；
    //
    // L：该字符只在日期和星期字段中使用，代表“Last”的意思，但它在两个字段中意思不同。L在日期字段中，表示这个月份的最后一天，如一月的31号，非闰年二月的28号；如果L用在星期中，则表示星期六，等同于7。但是，如果L出现在星期字段里，而且在前面有一个数值X，则表示“这个月的最后X天”，例如，6L表示该月的最后星期五；
    //
    // W：该字符只能出现在日期字段里，是对前导日期的修饰，表示离该日期最近的工作日。例如15W表示离该月15号最近的工作日，如果该月15号是星期六，则匹配14号星期五；如果15日是星期日，则匹配16号星期一；如果15号是星期二，那结果就是15号星期二。但必须注意关联的匹配日期不能够跨月，如你指定1W，如果1号是星期六，结果匹配的是3号星期一，而非上个月最后的那天。W字符串只能指定单一日期，而不能指定日期范围；
    //
    // LW组合：在日期字段可以组合使用LW，它的意思是当月的最后一个工作日；
    //
    // 井号(#)：该字符只能在星期字段中使用，表示当月某个工作日。如6#3表示当月的第三个星期五(6表示星期五，#3表示当前的第三个)，而4#5表示当月的第五个星期三，假设当月没有第五个星期三，忽略不触发；
    //
    // C：该字符只在日期和星期字段中使用，代表“Calendar”的意思。它的意思是计划所关联的日期，如果日期没有被关联，则相当于日历中所有日期。例如5C在日期字段中就相当于日历5日以后的第一天。1C在星期字段中相当于星期日后的第一天。
    //
    // Cron表达式对特殊字符的大小写不敏感，对代表星期的缩写英文大小写也不敏感。
    //
    // 例子========================================
    //  表示式	        说明
    //  0 0 12 * * ?	每天12点运行
    //  0 15 10 ? * *	每天10:15运行
    //  0 15 10 * * ?	每天10:15运行
    //  0 15 10 * * ? *	每天10:15运行
    //  0 15 10 * * ? 2008	在2008年的每天10：15运行
    //  0 * 14 * * ?	每天14点到15点之间每分钟运行一次，开始于14:00，结束于14:59。
    //  0 0/5 14 * * ?	每天14点到15点每5分钟运行一次，开始于14:00，结束于14:55。
    //  0 0/5 14,18 * * ?	每天14点到15点每5分钟运行一次，此外每天18点到19点每5钟也运行一次。
    //  0 0-5 14 * * ?	每天14:00点到14:05，每分钟运行一次。
    //  0 10,44 14 ? 3 WED	3月每周三的14:10分到14:44，每分钟运行一次。
    //  0 15 10 ? * MON-FRI	每周一，二，三，四，五的10:15分运行。
    //  0 15 10 15 * ?	每月15日10:15分运行。
    //  0 15 10 L * ?	每月最后一天10:15分运行。
    //  0 15 10 ? * 6L	每月最后一个星期五10:15分运行。
    //  0 15 10 ? * 6L 2007-2009	在2007,2008,2009年每个月的最后一个星期五的10:15分运行。
    //  0 15 10 ? * 6#3	每月第三个星期五的10:15分运行。
    @Bean
    public Trigger quartzTaskTrigger() {
        CronScheduleBuilder cronScheduleBuilder = CronScheduleBuilder.cronSchedule("*/4 * * * * ?"); // 每4秒
        return TriggerBuilder.newTrigger()
                .forJob(quartzTaskDetail())
                .withIdentity("quartzTask")
                .withSchedule(cronScheduleBuilder)
                .build();
    }
}
